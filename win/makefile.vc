# Makefile.vc
#
# This makefile builds Tktable.dll, a table widget as a dynamically
# loadable Tk extension.  This makefile is suitable for use with VC++ 5+.
#
# TkTable assumes that Tcl/Tk has already been installed on Windows.
#
# This does not provide support for static builds on Windows
#

PROJECT	    = Tktable
TBL_COMMAND = table
TBL_RUNTIME = tkTable.tcl
NEED_TK     = 1
!include "rules-ext.vc"

#Get version info (this is in Makefile and C format)
!include "$(GENERICDIR)\version.h"

INST_RUNTIME	= $(DEST_DIR)\lib\$(PROJECT)$(VERSION)
INST_RUNTIMEU	= $(DEST_DIRU)/lib/$(PROJECT)$(VERSION)

# NO_EMBEDDED_RUNTIME means that the tkTable.tcl file will not be embedded
# into the executable, thus the default tkTable.tcl library file will not
# be available when the library is loaded.
# If this is defined, the tkTable.tcl file must be available in a
# predefined set of directories (see docs).
#TBL_CFLAGS	+= -DNO_EMBEDDED_RUNTIME

PRJ_DEFINES = -DDLL_BUILD $(TBL_CFLAGS) \
	  -DTBL_COMMAND=\"$(TBL_COMMAND)\" \
	  -DTBL_RUNTIME="\"$(TBL_RUNTIME)\"" \
	  -D_CRT_SECURE_NO_WARNINGS

PRJ_INCLUDES = -I"$(TMP_DIR)"
PRJ_OBJS = $(TMP_DIR)\tkTable.obj \
	$(TMP_DIR)\tkTableWin.obj \
	$(TMP_DIR)\tkTableTag.obj \
	$(TMP_DIR)\tkTableEdit.obj \
	$(TMP_DIR)\tkTableCell.obj \
	$(TMP_DIR)\tkTableCellSort.obj \
	$(TMP_DIR)\tkTableCmds.obj \
	$(TMP_DIR)\tkTableUtil.obj
# $(TMP_DIR)\tkTablePs.obj



DISABLE_TARGET_test = 1
!include "$(_RULESDIR)\targets.vc"
pkgindex: default-pkgindex

test: $(OUT_DIR)\pkgIndex.tcl
	@"$(WISH)" <<
	    lappend auto_path $(ROOT)
	    set code [catch {
		    package require $(PROJECT)
		    pack [$(TBL_COMMAND) .t]
		} msg]
	    if {$$code != 0} {
		tk_messageBox -type ok -message\
		    "$(PROJECT) failed to load and run: $$msg"
	    } else {
		tk_messageBox -type ok -message\
		    "everything seems OK for 'package require $(PROJECT)'"
	    }
	    exit $$code
<<

$(PRJ_OBJS): $(TMP_DIR)\tkTable.tcl.h

$(TMP_DIR)\tkTable.tcl.h: $(LIBDIR)\tkTable.tcl
	"$(TCLSH)" << $(LIBDIR)\tkTable.tcl >$(TMP_DIR)\tkTable.tcl.h
	set in [open [lindex $$argv 0] r]
	while {[gets $$in line] != -1} {
	    switch -regexp -- $$line "^$$" - {^#} continue
	    regsub -all {\\} $$line {\\\\} line
	    regsub -all {"} $$line {\"} line
	    puts "\"$$line\\n\""
	}
<<

